{"version":3,"sources":["Header.js","Home.js","Resume.js","Thumbnail.js","Projects.js","Contact.js","Body.js","App.js","serviceWorker.js","index.js","Resume-Alan-Wright.pdf","../node_modules/pdfjs-dist/build sync","profile.jpg"],"names":["Header","className","to","href","ResumePDF","exact","Home","props","src","Profile","alt","pdfjs","GlobalWorkerOptions","workerSrc","version","Resume","useState","setNumPages","pageNumber","file","onLoadSuccess","numPages","height","Thumbnail","link","image","title","category","Projects","Contact","withRouter","location","TransitionGroup","CSSTransition","key","pathname","timeout","enter","exit","classNames","class","path","component","App","Boolean","window","hostname","match","WebFont","load","google","families","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id"],"mappings":"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","file":"static/js/main.dc6ddbce.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ResumePDF from \"./Resume-Alan-Wright.pdf\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"navigation\">\r\n        <div className=\"content-area\">\r\n            <span><b>Alan Wright</b></span>\r\n            {/* Set up the Links */}\r\n            <NavLink to=\"/contact\" className=\"item\">Contact Me</NavLink>\r\n            <NavLink to=\"/projects\" className=\"item\">Projects</NavLink>\r\n            <a className=\"item\" href={ResumePDF}>Resume</a>\r\n            {/*<NavLink to=\"/resume\" className=\"item\">Resume</NavLink>*/}\r\n            <NavLink exact to=\"/\" className=\"item\">Home</NavLink>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\"\r\nimport Profile from \"./profile.jpg\";\r\n \r\nfunction Home(props) {\r\n  return (\r\n    <div>\r\n      <div className=\"profile\">\r\n        <img src={Profile} className=\"profile-pic\" alt=\"Profile Picture\" />\r\n        <h2>Designer</h2>\r\n        <h2>Programmer</h2>\r\n        <hr />\r\n        <h3>HTML/CSS | C++ | Javascript | React | Express | NodeJS | Python | Java | OpenGL | SDL | Krita | GIMP 2 | Inkscape</h3>\r\n        <ul className=\"social-ul\">\r\n        <li><a href=\"https://www.linkedin.com/in/alanwright2020/\">LinkedIn</a></li>\r\n        <li><a href=\"\">Facebook</a></li>\r\n        <li><a href=\"\">Twitter</a></li>\r\n      </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default Home;","import React, { useState } from 'react';\r\nimport { Document, Page, pdfjs } from 'react-pdf';\r\nimport ResumePDF from \"./Resume-Alan-Wright.pdf\";\r\n\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\n\r\nfunction Resume() {\r\n  const [numPages, setNumPages] = useState(null);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    setNumPages(numPages);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <a href={ResumePDF}>Download!</a>\r\n      <div className=\"resume\">\r\n      <Document\r\n        file={ResumePDF}\r\n        onLoadSuccess={onDocumentLoadSuccess}\r\n      >\r\n        <Page pageNumber={pageNumber} height=\"1080\" />\r\n      </Document>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Resume;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './App.css';\r\n\r\nfunction Thumbnail(props) {\r\n  return (\r\n    <div className=\"project\">\r\n      <Link to={props.link}>\r\n          <div className=\"project-image\">\r\n            <img src={props.image} alt=\"Project Image\"/>\r\n          </div>\r\n          <div className=\"project-title\">{props.title}</div>\r\n          <div className=\"project-category\">{props.category}</div>\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Thumbnail","import React from \"react\"\r\nimport Thumbnail from \"./Thumbnail.js\";\r\nimport './App.css';\r\n \r\nfunction Projects(props) {\r\n  return (\r\n    <div>\r\n      <h1>Projects</h1>\r\n      <Thumbnail\r\n        link=\"/twitter\"\r\n        image=\"logo192.png\"\r\n        title=\"Twitter Newsfeed\"\r\n        category=\"Mobile App\"\r\n        />\r\n        \r\n      <Thumbnail\r\n        link=\"/airbnb\"\r\n        image=\"logo192.png\"\r\n        title=\"Airbnb Experiences\"\r\n        category=\"Website\"\r\n      />\r\n        \r\n      <Thumbnail\r\n        link=\"/photoshop\"\r\n        image=\"logo192.png\"\r\n        title=\"Photoshop Redesign\"\r\n        category=\"Desktop App\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default Projects;","import React from \"react\"\r\n \r\nfunction Contact(props) {\r\n  return (\r\n    <div>\r\n      <h1>New Component</h1>\r\n    </div>\r\n  )\r\n}\r\n \r\nexport default Contact;","import React from \"react\";\r\nimport { Switch, Route, withRouter } from \"react-router-dom\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nimport Home from \"./Home.js\";\r\nimport Resume from \"./Resume.js\";\r\nimport Projects from \"./Projects.js\";\r\nimport Contact from \"./Contact.js\";\r\n\r\nfunction Body({ location }) {\r\n  return (\r\n      <TransitionGroup className=\"transition-group\">\r\n        <CSSTransition\r\n          key={location.pathname}\r\n          timeout={{ enter: 600, exit: 600 }}\r\n          classNames=\"fade\">\r\n\r\n          <section className=\"route-section\">\r\n            <div class=\"content-area\">\r\n              <Switch location={location}>\r\n                <Route exact path=\"/\" component={Home} />\r\n                <Route path=\"/resume\" component={Resume} />\r\n                <Route path=\"/projects\" component={Projects} />\r\n                <Route path=\"/contact\" component={Contact} />\r\n              </Switch>\r\n            </div>\r\n          </section>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n  );\r\n}\r\n\r\nexport default withRouter(Body);","import React from 'react';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Header from './Header.js';\nimport Body from './Body.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Body />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Exo 2:300', 'monospace']\n  }\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Resume-Alan-Wright.a7977cd4.pdf\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 31;","module.exports = __webpack_public_path__ + \"static/media/profile.7c6bad87.jpg\";"],"sourceRoot":""}